package TestCase::Lib::SPVM::IO::Stdout {
  use SPVM::IO::Stdout;

  sub test_print : int () {
    
    SPVM::IO::Stdout->print("Hello");
    
    return 1;
  }

  sub test_print_newline : int () {
    SPVM::IO::Stdout->print("\n");
    
    return 1;
  }

  sub test_print_long_lines : int () {
    SPVM::IO::Stdout->print("AAAAAAAAAAAAA\nBBBBBBBBBBBBBBBBBBB\nCCCCCCCCCCCCCCCCCCCCCCCCCCC\nDDDDDDDDDDDDDDDDDDDDDDDDD\nEEEEEEEEEEEEEEEEEEEEEE\nFFFFFFFFFFFFFF\n");
    
    return 1;
  }

  sub test_write : int () {
    
    my $bytes = "HelloWrite";
    SPVM::IO::Stdout->write($bytes, 0, length $bytes);
    
    return 1;
  }

  sub test_write_newline : int () {
    my $bytes = "\n";
    
    SPVM::IO::Stdout->write($bytes, 0, length $bytes);
    
    return 1;
  }

  sub test_write_long_lines : int () {
    my $bytes = "AAAAAAAAAAAAA\nBBBBBBBBBBBBBBBBBBB\nCCCCCCCCCCCCCCCCCCCCCCCCCCC\nDDDDDDDDDDDDDDDDDDDDDDDDD\nEEEEEEEEEEEEEEEEEEEEEE\nFFFFFFFFFFFFFF\n";
    SPVM::IO::Stdout->write($bytes, 0, length $bytes);
    
    return 1;
  }

  sub test_write_offset : int () {
    
    my $bytes = "HelloWrite";
    SPVM::IO::Stdout->write($bytes, 2, length $bytes - 2);
    
    return 1;
  }
}
