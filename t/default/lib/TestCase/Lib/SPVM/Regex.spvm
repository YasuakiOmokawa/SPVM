package TestCase::Lib::SPVM::Regex {
  use SPVM::Regex;
  
  sub compile : int () {
    my $re = SPVM::Regex->new("abc");
    
    return 1;
  }

  sub match_quantifier : int () {
    # Match {1,3}
    {
      # Match {1,3} - "zabcz"
      {
        my $re = SPVM::Regex->new("ab{1,3}c");
        my $target = "zabcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }
      
      # Match {1,3} - "zabbbcz"
      {
        my $re = SPVM::Regex->new("ab{1,3}c");
        my $target = "zabbbcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Not Match {1,3} - "zacz"
      {
        my $re = SPVM::Regex->new("ab{1,3}c");
        my $target = "zacz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }
      # Not Match {1,3} - "zabbbbcz"
      {
        my $re = SPVM::Regex->new("ab{1,3}c");
        my $target = "zabbbbcz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }
    }

    # Match {11,13}
    {
      # Match {11,13} - "zabbbbbbbbbbbcz"
      {
        my $re = SPVM::Regex->new("ab{11,13}c");
        my $target = "zabbbbbbbbbbbcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }
      
      # Match {11,13} - "zabbbcz"
      {
        my $re = SPVM::Regex->new("ab{11,13}c");
        my $target = "zabbbbbbbbbbbbbcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Not Match {11,13} - "zacz"
      {
        my $re = SPVM::Regex->new("ab{11,13}c");
        my $target = "zabbbbbbbbbbcz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }
      # Not Match {11,13} - "zabbbbcz"
      {
        my $re = SPVM::Regex->new("ab{11,13}c");
        my $target = "zabbbbbbbbbbbbbbcz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }
    }
    
    return 1;
  }

  sub match_one_or_zero : int () {
    # Match ?
    {
      # Match ? - "zabcz"
      {
        my $re = SPVM::Regex->new("ab?c");
        my $target = "zabcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Not Match ? - "zabbcz"
      {
        my $re = SPVM::Regex->new("ab?c");
        my $target = "zabbcz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }

      # Match ? - "zacz"
      {
        my $re = SPVM::Regex->new("ab?c");
        my $target = "zacz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }
    }
    
    return 1;
  }
  
  sub match_one_more : int () {
    # Match +
    {
      # Match + - "zabcz"
      {
        my $re = SPVM::Regex->new("ab+c");
        my $target = "zabcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Match + - "zabbcz"
      {
        my $re = SPVM::Regex->new("ab+c");
        my $target = "zabbcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Not Match + - "zacz"
      {
        my $re = SPVM::Regex->new("ab+c");
        my $target = "zacz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }
    }
    
    return 1;
  }

  sub match_zero_more : int () {
    # Match *
    {
      # Match * - "zabcz"
      {
        my $re = SPVM::Regex->new("ab*c");
        my $target = "zabcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Match * - "zabbcz"
      {
        my $re = SPVM::Regex->new("ab*c");
        my $target = "zabbcz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Match * - "zacz"
      {
        my $re = SPVM::Regex->new("ab*c");
        my $target = "zacz";
        
        my $match = $re->match($target);
        
        unless ($match) {
          return 0;
        }
      }

      # Not Match * - "zabbdz"
      {
        my $re = SPVM::Regex->new("ab*c");
        my $target = "zabbdz";
        
        my $match = $re->match($target);
        
        if ($match) {
          return 0;
        }
      }
    }
    
    return 1;
  }

  sub match : int () {

    # Match string
    {
      my $re = SPVM::Regex->new("abc");
      my $target = "zabcz";
      
      my $match = $re->match($target);
      
      unless ($match) {
        return 0;
      }
      
      unless ($match isa string[]) {
        return 0;
      }
      
      unless (@$match == 0) {
        return 0;
      }
    }
    
    # Match same string
    {
      my $re = SPVM::Regex->new("abc");
      my $target = "abc";
      
      my $match = $re->match($target);
      
      unless ($match) {
        return 0;
      }
      
      unless ($match isa string[]) {
        return 0;
      }
      
      unless (@$match == 0) {
        return 0;
      }
    }

    return 1;
  }
}
