package TestCase::Lib::SPVM::Regex {
  use SPVM::Regex;
  
  sub compile : int () {
    my $re = SPVM::Regex->new("abc");
    
    return 1;
  }

  sub match : int () {

    # Match string
    {
      my $re = SPVM::Regex->new("abc");
      my $target = "zabcz";
      
      my $match = $re->match($target);
      
      unless ($match) {
        return 0;
      }
      
      unless ($match isa string[]) {
        return 0;
      }
      
      unless (@$match == 0) {
        return 0;
      }
    }
    
    # Match same string
    {
      my $re = SPVM::Regex->new("abc");
      my $target = "abc";
      
      my $match = $re->match($target);
      
      unless ($match) {
        return 0;
      }
      
      unless ($match isa string[]) {
        return 0;
      }
      
      unless (@$match == 0) {
        return 0;
      }
    }

    return 1;
  }

=pod
  sub match : int () {
    my $re = SPVM::Regex->new("abc");
    
    my $str = "zabcz";
    
    my $matches = $re->match($str);
    
    unless ($matched) {
      return 0;
    }
    
    return 1;
  }
=cut
}
