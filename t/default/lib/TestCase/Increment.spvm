package TestCase::Increment {
  use TestCase::Simple;

  sub pre_inc_deref : int () {
    my $value_byte = (byte)INT8_MIN();
    my $value_short = (short)INT16_MIN();
    my $value_int = INT32_MIN();
    my $value_long = INT64_MIN();
    my $value_float = FLT_MIN();
    my $value_double = DBL_MIN();
    
    my $value_byte_ref = \$value_byte;
    my $value_short_ref = \$value_short;
    my $value_int_ref = \$value_int;
    my $value_long_ref = \$value_long;
    my $value_float_ref = \$value_float;
    my $value_double_ref = \$value_double;
    
    my $value_byte2 = ++$$value_byte_ref;
    my $value_short2 = ++$$value_short_ref;
    my $value_int2 = ++$$value_int_ref;
    my $value_long2 = ++$$value_long_ref;
    my $value_float2 = ++$$value_float_ref;
    my $value_double2 = ++$$value_double_ref;
    
    if ($$value_byte_ref == INT8_MIN() + 1) {
      if ($value_byte2 == INT8_MIN() + 1) {
        if ($$value_short_ref == INT16_MIN() + 1) {
          if ($value_short2 == INT16_MIN() + 1) {
            if ($$value_int_ref == INT32_MIN() + 1) {
              if ($value_int2 == INT32_MIN() + 1) {
                if ($$value_long_ref == INT64_MIN() + 1) {
                  if ($value_long2 == INT64_MIN() + 1) {
                    if ($$value_float_ref == FLT_MIN() + 1) {
                      if ($value_float2 == FLT_MIN() + 1) {
                        if ($$value_double_ref == DBL_MIN() + 1) {
                          if ($value_double2 = DBL_MIN() + 1) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub pre_inc_deref_access : int () {
    my $simple = new TestCase::Simple;
    
    $simple->{byte_value} = (byte)INT8_MIN();
    $simple->{short_value} = (short)INT16_MIN();
    $simple->{int_value} = INT32_MIN();
    $simple->{long_value} = INT64_MIN();
    $simple->{float_value} = FLT_MIN();
    $simple->{double_value} = DBL_MIN();

    my $value_byte2 = ++$simple->{byte_value};
    my $value_short2 = ++$simple->{short_value};
    my $value_int2 = ++$simple->{int_value};
    my $value_long2 = ++$simple->{long_value};
    my $value_float2 = ++$simple->{float_value};
    my $value_double2 = ++$simple->{double_value};
    
    if ($simple->{byte_value} == INT8_MIN() + 1) {
      if ($value_byte2 == INT8_MIN() + 1) {
        if ($simple->{short_value} == INT16_MIN() + 1) {
          if ($value_short2 == INT16_MIN() + 1) {
            if ($simple->{int_value} == INT32_MIN() + 1) {
              if ($value_int2 == INT32_MIN() + 1) {
                if ($simple->{long_value} == INT64_MIN() + 1) {
                  if ($value_long2 == INT64_MIN() + 1) {
                    if ($simple->{float_value} == FLT_MIN() + 1) {
                      if ($value_float2 == FLT_MIN() + 1) {
                        if ($simple->{double_value} == DBL_MIN() + 1) {
                          if ($value_double2 = DBL_MIN() + 1) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  sub pre_inc_field_access : int () {
    my $simple = new TestCase::Simple;
    
    $simple->{byte_value} = (byte)INT8_MIN();
    $simple->{short_value} = (short)INT16_MIN();
    $simple->{int_value} = INT32_MIN();
    $simple->{long_value} = INT64_MIN();
    $simple->{float_value} = FLT_MIN();
    $simple->{double_value} = DBL_MIN();

    my $value_byte2 = ++$simple->{byte_value};
    my $value_short2 = ++$simple->{short_value};
    my $value_int2 = ++$simple->{int_value};
    my $value_long2 = ++$simple->{long_value};
    my $value_float2 = ++$simple->{float_value};
    my $value_double2 = ++$simple->{double_value};
    
    if ($simple->{byte_value} == INT8_MIN() + 1) {
      if ($value_byte2 == INT8_MIN() + 1) {
        if ($simple->{short_value} == INT16_MIN() + 1) {
          if ($value_short2 == INT16_MIN() + 1) {
            if ($simple->{int_value} == INT32_MIN() + 1) {
              if ($value_int2 == INT32_MIN() + 1) {
                if ($simple->{long_value} == INT64_MIN() + 1) {
                  if ($value_long2 == INT64_MIN() + 1) {
                    if ($simple->{float_value} == FLT_MIN() + 1) {
                      if ($value_float2 == FLT_MIN() + 1) {
                        if ($simple->{double_value} == DBL_MIN() + 1) {
                          if ($value_double2 = DBL_MIN() + 1) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub pre_inc_array_access_var_index : int () {
    my $values_byte = new byte[1];
    my $values_short = new short[1];
    my $values_int = new int[1];
    my $values_long = new long[1];
    my $values_float = new float[1];
    my $values_double = new double[1];
    
    $values_byte->[0] = (byte)INT8_MIN();
    $values_short->[0] = (short)INT16_MIN();
    $values_int->[0] = INT32_MIN();
    $values_long->[0] = INT64_MIN();
    $values_float->[0] = FLT_MIN();
    $values_double->[0] = DBL_MIN();

    my $index = 0;
    my $value_byte2 = ++$values_byte->[$index];
    my $value_short2 = ++$values_short->[$index];
    my $value_int2 = ++$values_int->[$index];
    my $value_long2 = ++$values_long->[$index];
    my $value_float2 = ++$values_float->[$index];
    my $value_double2 = ++$values_double->[$index];
    
    if ($values_byte->[0] == INT8_MIN() + 1) {
      if ($value_byte2 == INT8_MIN() + 1) {
        if ($values_short->[0] == INT16_MIN() + 1) {
          if ($value_short2 == INT16_MIN() + 1) {
            if ($values_int->[0] == INT32_MIN() + 1) {
              if ($value_int2 == INT32_MIN() + 1) {
                if ($values_long->[0] == INT64_MIN() + 1) {
                  if ($value_long2 == INT64_MIN() + 1) {
                    if ($values_float->[0] == FLT_MIN() + 1) {
                      if ($value_float2 == FLT_MIN() + 1) {
                        if ($values_double->[0] == DBL_MIN() + 1) {
                          if ($value_double2 = DBL_MIN() + 1) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub pre_inc_array_access_constant_index : int () {
    my $values_byte = new byte[1];
    my $values_short = new short[1];
    my $values_int = new int[1];
    my $values_long = new long[1];
    my $values_float = new float[1];
    my $values_double = new double[1];
    
    $values_byte->[0] = (byte)INT8_MIN();
    $values_short->[0] = (short)INT16_MIN();
    $values_int->[0] = INT32_MIN();
    $values_long->[0] = INT64_MIN();
    $values_float->[0] = FLT_MIN();
    $values_double->[0] = DBL_MIN();

    my $value_byte2 = ++$values_byte->[0];
    my $value_short2 = ++$values_short->[0];
    my $value_int2 = ++$values_int->[0];
    my $value_long2 = ++$values_long->[0];
    my $value_float2 = ++$values_float->[0];
    my $value_double2 = ++$values_double->[0];
    
    if ($values_byte->[0] == INT8_MIN() + 1) {
      if ($value_byte2 == INT8_MIN() + 1) {
        if ($values_short->[0] == INT16_MIN() + 1) {
          if ($value_short2 == INT16_MIN() + 1) {
            if ($values_int->[0] == INT32_MIN() + 1) {
              if ($value_int2 == INT32_MIN() + 1) {
                if ($values_long->[0] == INT64_MIN() + 1) {
                  if ($value_long2 == INT64_MIN() + 1) {
                    if ($values_float->[0] == FLT_MIN() + 1) {
                      if ($value_float2 == FLT_MIN() + 1) {
                        if ($values_double->[0] == DBL_MIN() + 1) {
                          if ($value_double2 = DBL_MIN() + 1) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub pre_inc_var : int () {
    my $value_byte = (byte)INT8_MIN();
    my $value_short = (short)INT16_MIN();
    my $value_int = INT32_MIN();
    my $value_long = INT64_MIN();
    my $value_float = FLT_MIN();
    my $value_double = DBL_MIN();
    
    my $value_byte2 = ++$value_byte;
    my $value_short2 = ++$value_short;
    my $value_int2 = ++$value_int;
    my $value_long2 = ++$value_long;
    my $value_float2 = ++$value_float;
    my $value_double2 = ++$value_double;
    
    
    if ($value_byte == INT8_MIN() + 1) {
      if ($value_byte2 == INT8_MIN() + 1) {
        if ($value_short == INT16_MIN() + 1) {
          if ($value_short2 == INT16_MIN() + 1) {
            if ($value_int == INT32_MIN() + 1) {
              if ($value_int2 == INT32_MIN() + 1) {
                if ($value_long == INT64_MIN() + 1) {
                  if ($value_long2 == INT64_MIN() + 1) {
                    if ($value_float == FLT_MIN() + 1) {
                      if ($value_float2 == FLT_MIN() + 1) {
                        if ($value_double == DBL_MIN() + 1) {
                          if ($value_double2 = DBL_MIN() + 1) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub post_inc : int () {
    my $value_byte = (byte)0;
    my $value_short = (short)0;
    my $value_int = 0;
    my $value_long = 0L;
    my $value_float = 0.25f;
    my $value_double = 0.25;
    
    my $value_byte2 = $value_byte++;
    my $value_short2 = $value_short++;
    my $value_int2 = $value_int++;
    my $value_long2 = $value_long++;
    my $value_float2 = $value_float++;
    my $value_double2 = $value_double++;
    
    if ($value_byte == 1) {
      if ($value_byte2 == 0) {
        if ($value_short == 1) {
          if ($value_short2 == 0) {
            if ($value_int == 1) {
              if ($value_int2 == 0) {
                if ($value_long == 1L) {
                  if ($value_long2 == 0L) {
                    if ($value_float == 1.25f) {
                      if ($value_float2 = 0.25f) {
                        if ($value_double == 1.25) {
                          if ($value_double2 == 0.25) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub pre_dec : int () {
    my $value_byte = (byte)0;
    my $value_short = (short)0;
    my $value_int = 0;
    my $value_long = 0L;
    my $value_float = 0;
    my $value_double = 0L;
    
    my $value_byte2 = --$value_byte;
    my $value_short2 = --$value_short;
    my $value_int2 = --$value_int;
    my $value_long2 = --$value_long;
    my $value_float2 = --$value_float;
    my $value_double2 = --$value_double;
    
    if ($value_byte == -1) {
      if ($value_byte2 == -1) {
        if ($value_short == -1) {
          if ($value_short2 == -1) {
            if ($value_int == -1) {
              if ($value_int2 == -1) {
                if ($value_long == -1L) {
                  if ($value_long2 == -1L) {
                    if ($value_float == -1.0f) {
                      if ($value_float2 == -1.0f) {
                        if ($value_double == -1.0) {
                          if ($value_double2 == -1.0) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  sub post_dec : int () {
    my $value_byte = (byte)0;
    my $value_short = (short)0;
    my $value_int = 0;
    my $value_long = 0L;
    my $value_float = 1.25f;
    my $value_double = 1.25;
    
    my $value_byte2 = $value_byte--;
    my $value_short2 = $value_short--;
    my $value_int2 = $value_int--;
    my $value_long2 = $value_long--;
    my $value_float2 = $value_float--;
    my $value_double2 = $value_double--;
    
    if ($value_byte == -1) {
      if ($value_byte2 == 0) {
        if ($value_short == -1) {
          if ($value_short2 == 0) {
            if ($value_int == -1) {
              if ($value_int2 == 0) {
                if ($value_long == -1L) {
                  if ($value_long2 == 0L) {
                    if ($value_float == 0.25f) {
                      if ($value_float2 == 1.25f) {
                        if ($value_double == 0.25) {
                          if ($value_double2 == 1.25) {
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
