package TestCase::LogicalOperator {
  
  precompile sub logical_not_true : int () {
    if (!1) {
      return 0;
    }
    
    return 1;
  }
  precompile sub logical_not_false : int () {
    if (!0) {
      return 1;
    }
    
    return 0;
  }

  # logical or
  precompile sub logical_or_both_true : int () {
    if (1 || 1) {
      return 1;
    }
    
    return 0;
  }
  
  precompile sub logical_or_left_true : int () {
    if (1 || 0) {
      return 1;
    }
    
    return 0;
  }

  precompile sub logical_or_right_true : int () {
    if (0 || 1) {
      return 1;
    }
    
    return 0;
  }

  precompile sub logical_or_both_false : int () {
    if (0 || 0) {
      return 0;
    }
    
    return 1;
  }
  
  # logical and
  precompile sub logical_and_both_true : int () {
    if (1 && 1) {
      return 1;
    }
    
    return 0;
  }
  
  precompile sub logical_and_left_true : int () {
    if (1 && 0) {
      return 0;
    }
    
    return 1;
  }

  precompile sub logical_and_right_true : int () {
    if (1 && 0) {
      return 0;
    }
    
    return 1;
  }

  precompile sub logical_and_both_false : int () {
    if (0 && 0) {
      return 0;
    }
    
    return 1;
  }
}
