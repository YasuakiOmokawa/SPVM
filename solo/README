SPVM solo test command

   # Normal run
   yacc/bison.sh && perl Makefile.PL && make && perl solo/solo_Makefile.PL && make -f solo/Makefile && ./solo/spvm_main TestCase foo bar

   # Debug run - Print AST, package information, operaion codes
   yacc/bison.sh && perl Makefile.PL --OPTIMIZE="-O0 -g" --DEFINE=SPVM_DEBUG_DUMP --DEFINE=SPVM_DEBUG_OBJECT_COUNT && make && perl solo/solo_Makefile.PL  --OPTIMIZE="-O0 -g" --DEFINE=SPVM_DEBUG_DUMP --DEFINE=SPVM_DEBUG_OBJECT_COUNT && make -f solo/Makefile && ./solo/spvm_main TestCase foo bar

   # Parser Debug run - Print yacc result
   yacc/bison.sh && perl Makefile.PL --OPTIMIZE="-O0 -g" --DEFINE=SPVM_DEBUG_YACC && make && perl solo/solo_Makefile.PL  --OPTIMIZE="-O0 -g" --DEFINE=SPVM_DEBUG_YACC && make -f solo/Makefile && ./solo/spvm_main TestCase foo bar

See batcktrace of core dump

  gdb solo/spvm_main core.*

What is solo test command?

  solo test is used for debgug.
  
  SPVM is compiled to dynamic link library by -O3 option.
  
  this is difficult to debug because debug information is removed and it is not simple machine code.
  
  If you use the above solo test commands, you can create
  
    solo/spvm_main
  
  "solo/spvm_main" can execute SPVM module by the following way.
  
    ./solo/spvm_main TestCase

See core dump

  If you use Debug run, you can see core dump and back trace by gdb command

    gdb spvm core.*
    
    bt
