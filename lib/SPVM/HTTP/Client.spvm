package SPVM::HTTP::Client {
  use SPVM::HTTP::Client::Request;
  use SPVM::HTTP::Headers;
  use SPVM::HTTP::URL;

  has default_headers : public SPVM::HTTP::Headers;

  sub new : SPVM::HTTP::Client () {
    my $self = new SPVM::HTTP::Client;
    $self->{default_headers} = SPVM::HTTP::Headers->new;
    return $self;
  }

  private sub _prepare_headers : void ($self : self,
      $request : SPVM::HTTP::Client::Request) {
    $request->{headers} = $self->{default_headers};
    $request->{headers}->add("Host", $request->host_port);
    warn((string)($request->{headers}->get("Host")));
    warn((string)($request->{headers}->get("x-foo")));
  }

  sub request : void ($self : self, $method : string,
      $url : string, $args : SPVM::Hash) {

    # Create request
    my $u = SPVM::HTTP::URL->parse($url);
    $u->force_root_path_slashed;

    my $request = SPVM::HTTP::Client::Request->new_with(hash([(object)
      scheme  => $u->{scheme},
      host    => $u->{host},
      port    => $u->{port},
      path    => $u->{path},
      params  => $u->{params},
    ]));

    # Prepare headers
    $self->_prepare_headers($request);
  }
}
