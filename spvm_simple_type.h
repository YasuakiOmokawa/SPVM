#ifndef SPVM_SIMPLE_TYPE_H
#define SPVM_SIMPLE_TYPE_H

#include <stdio.h>

#include "spvm_base.h"

enum {
  SPVM_SIMPLE_TYPE_C_CATEGORY_UNKNOWN,
  SPVM_SIMPLE_TYPE_C_CATEGORY_VOID,
  SPVM_SIMPLE_TYPE_C_CATEGORY_UNDEF,
  SPVM_SIMPLE_TYPE_C_CATEGORY_NUMERIC,
  SPVM_SIMPLE_TYPE_C_CATEGORY_ANY_OBJECT,
  SPVM_SIMPLE_TYPE_C_CATEGORY_PACKAGE,
};

enum {
  SPVM_SIMPLE_TYPE_C_ID_UNKNOWN,
  SPVM_SIMPLE_TYPE_C_ID_VOID,
  SPVM_SIMPLE_TYPE_C_ID_UNDEF,
  SPVM_SIMPLE_TYPE_C_ID_BYTE,
  SPVM_SIMPLE_TYPE_C_ID_SHORT,
  SPVM_SIMPLE_TYPE_C_ID_INT,
  SPVM_SIMPLE_TYPE_C_ID_LONG,
  SPVM_SIMPLE_TYPE_C_ID_FLOAT,
  SPVM_SIMPLE_TYPE_C_ID_DOUBLE,
  SPVM_SIMPLE_TYPE_C_ID_ANY_OBJECT,
  SPVM_SIMPLE_TYPE_C_ID_STRING,
};

extern const char* const SPVM_SIMPLE_TYPE_C_CATEGORY_NAMES[];
extern const char* const SPVM_SIMPLE_TYPE_C_ID_NAMES[];

struct SPVM_simple_type {
  const char* name;
  int32_t category;
  int32_t id;
};

#endif
